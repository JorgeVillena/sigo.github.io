{"version":3,"sources":["./src/app/modules/autorizaciones/Autorizaciones-routing.module.ts","./src/app/modules/autorizaciones/autorizaciones.module.ts","./src/app/modules/autorizaciones/services/json-placeholder.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEvD,MAAM,MAAM,GAAW;IAErB;QACE,IAAI,EAAE,2BAA2B,EAAE,YAAY,EAAE,0DAA0D;KAC5G;CACF,CAAC;AAMF,IAAa,2BAA2B,GAAxC,MAAa,2BAA2B;CAAI;AAA/B,2BAA2B;IAJvC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAE,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAE;QAC1C,OAAO,EAAE,CAAE,4DAAY,CAAE;KAC1B,CAAC;GACW,2BAA2B,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdqC;AACpC;AACqC;AACR;AACd;AAaxD,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;CAAI;AAAxB,oBAAoB;IAXhC,8DAAQ,CAAC;QACR,YAAY,EAAE,EAAE;QAChB,OAAO,EAAE;YACP,0FAA2B;YAC3B,qEAAgB;SACjB;QACD,SAAS,EAAE;YACT,kFAAmB;YACnB,yFAAsB;SACvB;KACF,CAAC;GACW,oBAAoB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBiB;AACP;AAI3C,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAIjC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,QAAG,GAAW,sCAAsC,CAAC;QAI7D,eAAU,GAAG,GAAuC,EAAE;YACpD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAyB,GAAG,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC;QACpE,CAAC;QAED,eAAU,GAAG,CAAC,MAAM,EAAsC,EAAE;YAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAyB,GAAG,IAAI,CAAC,GAAG,QAAQ,EAAE,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;QACpG,CAAC;QAED,kBAAa,GAAG,CAAC,MAAM,EAAyC,EAAE;YAChE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAA4B,GAAG,IAAI,CAAC,GAAG,WAAW,EAAE,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;QAC1G,CAAC;IAZuC,CAAC;CAc1C;;YAd2B,+DAAU;;AAJzB,sBAAsB;IADlC,gEAAU,EAAE;qCAKe,+DAAU;GAJzB,sBAAsB,CAkBlC;AAlBkC","file":"modules-autorizaciones-autorizaciones-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  \r\n  {\r\n    path: 'autorizacion-aprob-online', loadChildren: './pages/autorizacion-aprob-online/crud.module#CrudModule'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forChild(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AutorizacionesRoutingModule { }\r\n","import { JsonPlaceholderService } from './services/json-placeholder.service';\r\nimport { NgModule } from '@angular/core';\r\nimport { AutorizacionesRoutingModule } from './Autorizaciones-routing.module';\r\nimport { AutorizacionService } from './services/autorizacion.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    AutorizacionesRoutingModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [\r\n    AutorizacionService,\r\n    JsonPlaceholderService\r\n  ]\r\n})\r\nexport class AutorizacionesModule { }\r\n","import { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { IJsonPlaceholderUser, IJsonPlaceholderComment, IJsonPlaceholderPost } from '../interfaces/json-placholder.interface';\r\n\r\n@Injectable()\r\nexport class JsonPlaceholderService {\r\n\r\n  private url: string = \"https://jsonplaceholder.typicode.com\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  fetchUsers = (): Observable<IJsonPlaceholderUser[]> => {\r\n    return this.http.get<IJsonPlaceholderUser[]>(`${this.url}/users`);\r\n  }\r\n\r\n  fetchPosts = (userId): Observable<IJsonPlaceholderPost[]> => {\r\n    return this.http.get<IJsonPlaceholderPost[]>(`${this.url}/posts`, { params: { userId: userId } });\r\n  }\r\n\r\n  fetchComments = (postId): Observable<IJsonPlaceholderComment[]> => {\r\n    return this.http.get<IJsonPlaceholderComment[]>(`${this.url}/comments`, { params: { postId: postId } });\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}